{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/openedtask/openedtask.component.css","./src/app/openedtask/openedtask.component.html","./src/app/openedtask/openedtask.component.ts","./src/app/tasks.service.ts","./src/app/taskslist/taskslist.component.css","./src/app/taskslist/taskslist.component.html","./src/app/taskslist/taskslist.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskslistComponent } from './taskslist/taskslist.component';\nimport { OpenedtaskComponent } from './openedtask/openedtask.component';\n\nconst routes: Routes = [\n  { path: '', component: TaskslistComponent },\n  { path: ':id', component: OpenedtaskComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"h1{\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    color: darkslategray;\\r\\n}\\r\\n\\r\\n.container{\\r\\n    min-width: 400px;\\r\\n    max-width: 900px;\\r\\n    margin: 0 auto;\\r\\n    height: 100%;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h1>\\n    Tasks\\n  </h1>\\n\\n<router-outlet></router-outlet>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { TasksService } from './tasks.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private tasksService: TasksService ) {\n    this.tasksService.getTasks();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport 'hammerjs';\n\nimport { AppComponent } from './app.component';\nimport { TaskslistComponent } from './taskslist/taskslist.component';\nimport { OpenedtaskComponent } from './openedtask/openedtask.component';\nimport { TasksService } from './tasks.service';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatChipsModule,\n  MatInputModule\n} from '@angular/material';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskslistComponent,\n    OpenedtaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatChipsModule,\n    MatInputModule\n  ],\n  providers: [ TasksService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\\r\\n\\r\\n.form-add-comment{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n}\\r\\n\\r\\n.form-add-comment button{\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.form-add-comment_input{\\r\\n    -webkit-box-flex:1;\\r\\n        -ms-flex:1;\\r\\n            flex:1;\\r\\n}\\r\\n\\r\\n.comment{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.avatar{\\r\\n    width: 70px;\\r\\n    height: 70px;\\r\\n    background: darkorange;\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\n.comment-content{\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.username{\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.wrap{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    height: calc(100% - 100px);\\r\\n}\\r\\n\\r\\n.form-container{\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\n.comments-container{\\r\\n    overflow: scroll;\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n    overflow-x:hidden; \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/openedtask/openedtask.component.css\n// module id = ./src/app/openedtask/openedtask.component.css\n// module chunks = main","module.exports = \"\\n<button mat-raised-button routerLink=\\\"/\\\">Back</button>\\n\\n<div class=\\\"wrap\\\">\\n  <div class=\\\"comments-container\\\" id=\\\"comments\\\">\\n    <mat-card *ngFor=\\\"let comment of task.comments\\\" class=\\\"comment\\\">\\n      <div class=\\\"avatar\\\"></div>\\n      <div class=\\\"comment-content\\\">\\n        <div class=\\\"username\\\">\\n          {{comment.username}}\\n        </div>\\n        {{comment.text}}\\n      </div>\\n    </mat-card>\\n  </div>\\n  <div class=\\\"form-container\\\">\\n    <form class=\\\"form-add-comment\\\">\\n      <mat-form-field class=\\\"form-add-comment_input\\\">\\n        <textarea matInput type=\\\"text\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment\\\" placeholder=\\\"Your comment\\\"></textarea>\\n      </mat-form-field>\\n      <button mat-raised-button (click)=\\\"sendComment()\\\" [disabled]=\\\"!comment\\\">Comment</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/openedtask/openedtask.component.html\n// module id = ./src/app/openedtask/openedtask.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from '../tasks.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-openedtask',\n  templateUrl: './openedtask.component.html',\n  styleUrls: ['./openedtask.component.css']\n})\nexport class OpenedtaskComponent implements OnInit {\n\n  task;\n  comment;\n\n  constructor(private tasksService: TasksService, private router: Router ) { }\n\n  ngOnInit() {\n    this.task = this.tasksService.getTaskById(this.router.url.substr(1));\n    console.log(this.task.name);\n  }\n\n  sendComment() {\n    this.tasksService.addComment(this.task.id, {\n      text: this.comment,\n      avatar: false,\n      username: 'Gap'\n    });\n    this.comment = '';\n    setTimeout(() => {\n      document.getElementById('comments').scrollTo(0, document.getElementById('comments').scrollHeight);\n    }, 50);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/openedtask/openedtask.component.ts","import { Injectable } from '@angular/core';\nimport * as UUID from 'uuidjs';\n\n\n@Injectable()\nexport class TasksService {\n\n  tasks = [];\n  saveTasks() {\n    localStorage.setItem('tasks', JSON.stringify( this.tasks ) );\n  }\n\n  getTasks() {\n    let tasks = localStorage.getItem('tasks'); \n    if (tasks) {\n      this.tasks = JSON.parse( localStorage.getItem('tasks') );\n    }\n  }\n\n  getTaskById(id) {\n    for (let i = 0; i < this.tasks.length; i++) {\n      if ( this.tasks[i].id === id ) {\n        return this.tasks[i];\n      }\n    }\n    return false;\n  }\n\n  add(name) {\n    this.tasks.push({\n      name: name,\n      id: UUID.generate(),\n      comments: []\n    });\n    this.saveTasks();\n  }\n\n  delete(id) {\n    this.tasks = this.tasks.filter(el => el.id !== id );\n    this.saveTasks();\n  }\n\n  addComment(id, text) {\n    for (let i = 0; i < this.tasks.length; i++) {\n      if (this.tasks[i].id === id) {\n        this.tasks[i].comments.push(text);\n        this.saveTasks();\n      }\n    }\n  }\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tasks.service.ts","module.exports = \".btnDel{\\r\\n    float: right;\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n.task{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.task-name{\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n}\\r\\n\\r\\n.comments-amount{\\r\\n    display: inline-block;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.form-add-task{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.form-add-task_input{\\r\\n    -webkit-box-flex:1;\\r\\n        -ms-flex:1;\\r\\n            flex:1;\\r\\n}\\r\\n\\r\\n.form-add-task_submit{\\r\\n    width:100px;\\r\\n    margin-left: 10px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taskslist/taskslist.component.css\n// module id = ./src/app/taskslist/taskslist.component.css\n// module chunks = main","module.exports = \"<form class=\\\"form-add-task\\\">\\n  <mat-form-field class=\\\"form-add-task_input\\\">\\n    <input matInput placeholder=\\\"Task name\\\" [(ngModel)]=\\\"taskName\\\" name=\\\"name\\\" >\\n  </mat-form-field>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addTask()\\\" [disabled]=\\\"!taskName\\\" class=\\\"form-add-task_submit\\\">Add new</button>\\n</form>\\n\\n<mat-card *ngFor=\\\"let task of this.tasksService.tasks\\\" routerLink={{task.id}} class=\\\"task\\\" >\\n  <span class=\\\"task-name\\\">\\n    {{task.name}}\\n    <mat-chip-list class=\\\"comments-amount\\\">\\n      <mat-chip color=\\\"accent\\\" selected=\\\"true\\\" *ngIf=\\\"task.comments.length\\\">{{task.comments.length}}</mat-chip>\\n    </mat-chip-list>\\n  </span>\\n  <button mat-button (click)=\\\"this.tasksService.delete(task.id)\\\">Delete</button>\\n</mat-card>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taskslist/taskslist.component.html\n// module id = ./src/app/taskslist/taskslist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from '../tasks.service';\nimport { NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-taskslist',\n  templateUrl: './taskslist.component.html',\n  styleUrls: ['./taskslist.component.css']\n})\nexport class TaskslistComponent implements OnInit {\n\n\n  constructor( private tasksService: TasksService ) { }\n\n  taskName;\n\n  addTask() {\n    this.tasksService.add(this.taskName);\n    this.taskName = '';\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskslist/taskslist.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}